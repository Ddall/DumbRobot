<?php

namespace Ddx\Dr\MarketBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Ddx\Dr\MarketBundle\Entity\TradingPair;
use Ddx\Dr\MarketBundle\Entity\Market;

/**
 * TradeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TradeRepository extends EntityRepository
{
    /**
     * @param Market $market
     * @param TradingPair $pair
     * @return Trade
     */
    public function getLastTrade(Market $market, TradingPair $pair){
        return $this->createQueryBuilder('t')
                ->select('t')
                ->where('t.remoteId IS NOT null')
                ->andWhere('t.market = :market_id')
                ->andWhere('t.tradingPair = :tp_id')
                ->orderBy('t.id', 'DESC')
                ->setParameter('market_id', $market->getId() )
                ->setParameter('tp_id', $pair->getId())
                ->setMaxResults(1)
                ->getQuery()->getOneOrNullResult()
                ;
    }
    
    
    /**
     * @param Market $market
     * @param TradingPair $pair
     * @return array
     */
    public function get5MinAverage(Market $market, TradingPair $pair){
        return $this->createQueryBuilder('t')
                ->select('t')
                ->andWhere('t.market = :market_id')
                ->andWhere('t.tradingPair = :tp_id')
                ->groupBy('ROUND(UNIX_TIMESTAMP(timestamp) / 300)')
                ->orderBy('t.id', 'DESC')
                ->setParameter('market_id', $market->getId() )
                ->setParameter('tp_id', $pair->getId())
                ->getQuery()->getResult()
                ;
    }
}
